#!/usr/bin/env ruby
require "thor"
require 'open3'
require 'json'
require_relative("../lib/crucible.rb")
module Golden
  class Cli < Thor
    desc "build ", "build module at [path]"
    method_option :verbose, :aliases => "-v", :desc => "Build with verbose logging"
    def build(fileName)
      self.load(options)
      @crucible.build(fileName,Dir.pwd)
      self.save
    end

    desc "list ", "list all libraries built with golden"
    method_option :verbose, :aliases => "-v", :desc => "List with package detail"
    def list
      self.load(options)
      if(!@crucible.packages || @crucible.packages.keys.length == 0)
        puts "No packages have yet been built. Navigate to a go project and build one using 'golden build (packageName).'"
      else
        puts "Golden has access to the following libraries:"
        if(@crucible.verbose?)
          @crucible.packages.each do |name, location|
            puts "#{name}\t#{location}"
          end
        else
          puts @crucible.packages.keys
        end
      end
    end

    desc "install ", "install a library built with golden to the current ruby project"
    method_option :verbose, :aliases => "-v", :desc => "Install with verbose logging"
    def install(packageName)
      self.load(options)
      if(!!@crucible.packages[packageName])
        puts "installing #{packageName}."
        @crucible.install(packageName)
      else
        puts "No packages named #{packageName} are yet known to golden. You can list all known packages with 'golden list'"
      end
    end

    protected
    def load(options=nil)
      @crucible = Golden::Crucible.new(options)
    end
    def save
      @crucible.save
    end
  end
end

Golden::Cli.start(ARGV)
